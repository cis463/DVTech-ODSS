@page "/employees"
@using DVTech_ODSS.Models
@using DVTech_ODSS.Services
@inject ManpowerService ManpowerService
@rendermode InteractiveServer

<PageTitle>Employee Management</PageTitle>

<div class="container-fluid">
    <div class="row mb-3 align-items-center">
        <div class="col">
            <h3 class="mb-0">👥 Employee Management</h3>
        </div>
        <div class="col-auto">
            <button class="btn btn-primary" @onclick="ShowAddForm">
                ➕ Add New Employee
            </button>
        </div>
    </div>

    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (showAddForm)
    {
        <div class="card shadow-sm">
            <div class="card-header bg-primary text-white py-2">
                <h6 class="mb-0">@(editingEmployee != null ? "Edit Employee" : "Add New Employee")</h6>
            </div>
            <div class="card-body p-3">
                <EditForm Model="currentEmployee" OnValidSubmit="SaveEmployee">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="row g-2 mb-2">
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Full Name *</label>
                            <InputText class="form-control form-control-sm" @bind-Value="currentEmployee.FullName" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Employee Code *</label>
                            <InputText class="form-control form-control-sm" @bind-Value="currentEmployee.EmployeeCode" placeholder="EMP-001" />
                        </div>
                    </div>

                    <div class="row g-2 mb-2">
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Email</label>
                            <InputText class="form-control form-control-sm" type="email" @bind-Value="currentEmployee.Email" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Phone Number</label>
                            <InputText class="form-control form-control-sm" @bind-Value="currentEmployee.PhoneNumber" />
                        </div>
                    </div>

                    <div class="row g-2 mb-2">
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Position *</label>
                            <InputText class="form-control form-control-sm" @bind-Value="currentEmployee.Position" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Department *</label>
                            <InputText class="form-control form-control-sm" @bind-Value="currentEmployee.Department" />
                        </div>
                    </div>

                    <div class="row g-2 mb-3">
                        <div class="col-md-6">
                            <label class="form-label small fw-bold mb-1">Status</label>
                            <InputSelect class="form-control form-control-sm" @bind-Value="currentEmployee.Status">
                                <option value="Active">Active</option>
                                <option value="On Leave">On Leave</option>
                                <option value="Inactive">Inactive</option>
                            </InputSelect>
                        </div>
                    </div>

                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-success btn-sm">Save</button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" @onclick="CancelForm">Cancel</button>
                    </div>
                </EditForm>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover table-sm mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="py-2">Code</th>
                                <th class="py-2">Full Name</th>
                                <th class="py-2">Position</th>
                                <th class="py-2">Department</th>
                                <th class="py-2">Phone</th>
                                <th class="py-2">Email</th>
                                <th class="py-2 text-center">Status</th>
                                <th class="py-2 text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (employees.Any())
                            {
                                @foreach (var employee in employees)
                                {
                                    <tr style="cursor: pointer;" @onclick="() => ViewEmployeeDetails(employee)">
                                        <td class="py-2 small"><strong>@employee.EmployeeCode</strong></td>
                                        <td class="py-2 small">@employee.FullName</td>
                                        <td class="py-2 small">@employee.Position</td>
                                        <td class="py-2 small">@employee.Department</td>
                                        <td class="py-2 small">@employee.PhoneNumber</td>
                                        <td class="py-2 small">@employee.Email</td>
                                        <td class="py-2 text-center">
                                            <span class="badge @GetStatusBadgeClass(employee.Status) small">
                                                @employee.Status
                                            </span>
                                        </td>
                                        <td class="py-2 text-center" @onclick:stopPropagation="true">
                                            <button class="btn btn-sm btn-outline-primary py-0 px-2" @onclick="() => EditEmployee(employee)">Edit</button>
                                            <button class="btn btn-sm btn-outline-danger py-0 px-2" @onclick="() => DeleteEmployee(employee.EmployeeId)">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="8" class="text-center py-4 text-muted">
                                        No employees found.
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

<!-- Employee Details Modal -->
@if (showDetailsModal && selectedEmployee != null)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.6);">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white py-2">
                    <h6 class="modal-title mb-0">Employee Details</h6>
                    <button type="button" class="btn-close btn-close-white" @onclick="CloseDetailsModal"></button>
                </div>
                <div class="modal-body p-3">
                    <div class="row mb-3">
                        <div class="col-8">
                            <h5 class="mb-1">@selectedEmployee.FullName</h5>
                            <p class="text-muted small mb-0">@selectedEmployee.Position</p>
                        </div>
                        <div class="col-4 text-end">
                            <span class="badge @GetStatusBadgeClass(selectedEmployee.Status) px-3 py-2">
                                @selectedEmployee.Status
                            </span>
                        </div>
                    </div>

                    <div class="row g-3 mb-3">
                        <div class="col-6">
                            <label class="small text-muted mb-0">Employee Code</label>
                            <p class="mb-0"><strong>@selectedEmployee.EmployeeCode</strong></p>
                        </div>
                        <div class="col-6">
                            <label class="small text-muted mb-0">Department</label>
                            <p class="mb-0">@selectedEmployee.Department</p>
                        </div>
                    </div>

                    <div class="row g-3 mb-3">
                        <div class="col-6">
                            <label class="small text-muted mb-0">Phone</label>
                            <p class="mb-0">
                                @if (!string.IsNullOrEmpty(selectedEmployee.PhoneNumber))
                                {
                                    <a href="tel:@selectedEmployee.PhoneNumber">@selectedEmployee.PhoneNumber</a>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </p>
                        </div>
                        <div class="col-6">
                            <label class="small text-muted mb-0">Email</label>
                            <p class="mb-0">
                                @if (!string.IsNullOrEmpty(selectedEmployee.Email))
                                {
                                    <a href="mailto:@selectedEmployee.Email">@selectedEmployee.Email</a>
                                }
                                else
                                {
                                    <span class="text-muted">Not provided</span>
                                }
                            </p>
                        </div>
                    </div>

                    <div class="row g-3">
                        <div class="col-12">
                            <label class="small text-muted mb-0">Date Hired</label>
                            <p class="mb-0">@selectedEmployee.DateHired.ToString("MMMM dd, yyyy")</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer py-2">
                    <button type="button" class="btn btn-sm btn-primary" @onclick="() => EditEmployee(selectedEmployee)">Edit Employee</button>
                    <button type="button" class="btn btn-sm btn-secondary" @onclick="CloseDetailsModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Employee> employees = new();
    private Employee currentEmployee = new();
    private Employee? editingEmployee = null;
    private Employee? selectedEmployee = null;
    private bool showAddForm = false;
    private bool showDetailsModal = false;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadEmployees();
    }

    private async Task LoadEmployees()
    {
        isLoading = true;
        employees = await ManpowerService.GetAllEmployeesAsync();
        isLoading = false;
    }

    private void ShowAddForm()
    {
        currentEmployee = new Employee();
        editingEmployee = null;
        showAddForm = true;
    }

    private void EditEmployee(Employee employee)
    {
        editingEmployee = employee;
        currentEmployee = new Employee
        {
            EmployeeId = employee.EmployeeId,
            FullName = employee.FullName,
            EmployeeCode = employee.EmployeeCode,
            Email = employee.Email,
            PhoneNumber = employee.PhoneNumber,
            Position = employee.Position,
            Department = employee.Department,
            Status = employee.Status,
            DateHired = employee.DateHired,
            IsActive = employee.IsActive
        };
        showAddForm = true;
        showDetailsModal = false;
        StateHasChanged();
    }

    private async Task SaveEmployee()
    {
        bool success;

        if (editingEmployee != null)
        {
            editingEmployee.FullName = currentEmployee.FullName;
            editingEmployee.EmployeeCode = currentEmployee.EmployeeCode;
            editingEmployee.Email = currentEmployee.Email;
            editingEmployee.PhoneNumber = currentEmployee.PhoneNumber;
            editingEmployee.Position = currentEmployee.Position;
            editingEmployee.Department = currentEmployee.Department;
            editingEmployee.Status = currentEmployee.Status;

            success = await ManpowerService.UpdateEmployeeAsync(editingEmployee);
        }
        else
        {
            success = await ManpowerService.AddEmployeeAsync(currentEmployee);
        }

        if (success)
        {
            await LoadEmployees();
            CancelForm();
            StateHasChanged();
        }
    }

    private async Task DeleteEmployee(int id)
    {
        await ManpowerService.DeleteEmployeeAsync(id);
        await LoadEmployees();
    }

    private void CancelForm()
    {
        showAddForm = false;
        currentEmployee = new Employee();
        editingEmployee = null;
    }

    private void ViewEmployeeDetails(Employee employee)
    {
        selectedEmployee = employee;
        showDetailsModal = true;
        StateHasChanged();
    }

    private void CloseDetailsModal()
    {
        showDetailsModal = false;
        selectedEmployee = null;
        StateHasChanged();
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Active" => "bg-success",
            "On Leave" => "bg-warning text-dark",
            "Inactive" => "bg-secondary",
            _ => "bg-secondary"
        };
    }
}